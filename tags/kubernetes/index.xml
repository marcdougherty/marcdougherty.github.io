<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes on Marc Dougherty</title><link>https://www.marcdougherty.com/tags/kubernetes/</link><description>Recent content in Kubernetes on Marc Dougherty</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Â© 2024 Marc Dougherty</copyright><lastBuildDate>Thu, 27 Jun 2024 13:17:33 -0700</lastBuildDate><atom:link href="https://www.marcdougherty.com/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Multi-cluster load balancing with Google Cloud</title><link>https://www.marcdougherty.com/2024/multi-cluster-load-balancing-with-google-cloud/</link><pubDate>Thu, 27 Jun 2024 13:17:33 -0700</pubDate><guid>https://www.marcdougherty.com/2024/multi-cluster-load-balancing-with-google-cloud/</guid><description>To build a high-availability service in the cloud, we need to be able to serve from multiple independent failure domains. We can achieve this with multiple kubernetes clusters in different cloud regions, but we&amp;rsquo;ll need a load balancer that can route to all of our clusters.
This article will provide an overview of 3 possible options for load balancing between kubernetes clusters on Google Cloud. Because I&amp;rsquo;m looking at this through the lens of Platform Engineering, I&amp;rsquo;ll also be discussing the breakdown of responsibilities and controls between a Platform team and an Application team.</description></item></channel></rss>